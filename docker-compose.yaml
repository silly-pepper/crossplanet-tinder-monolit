version: '3.8'

services:

#  minio:
#    image: minio/minio
#    ports:
#      - "9000:9000"
#      - "9001:9001"
#    volumes:
#      - minio_storage:/data
#    environment:
#      MINIO_ROOT_USER: tinder
#      MINIO_ROOT_PASSWORD: tindertinder
#    command: server --console-address ":9001" /data
#    networks:
#      - tinder
#
#  image-service:
#    image: image-service:latest
#    container_name: image-service
#    build:
#      context: ./image-service
#      dockerfile: Dockerfile
#    ports:
#      - "8186:8186"
#    depends_on:
#      - minio
#    restart: on-failure
#    networks:
#      - tinder


  kafka-1:
    image: bitnami/kafka:3.8.0
    container_name: kafka-1
    #    ports:
    #      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_KRAFT_CLUSTER_ID: tindertinder
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093"
      KAFKA_HEAP_OPTS: "-Xms200m -Xmx300m"
      KAFKA_CFG_NODE_ID: 1
    networks:
      - tinder

  kafka-2:
    image: bitnami/kafka:3.8.0
    container_name: kafka-2
    #    ports:
    #      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_KRAFT_CLUSTER_ID: tindertinder
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093"
      KAFKA_HEAP_OPTS: "-Xms200m -Xmx300m"
      KAFKA_CFG_NODE_ID: 2
    networks:
      - tinder

  kafka-3:
    image: bitnami/kafka:3.8.0
    container_name: kafka-3
    #    ports:
    #      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_KRAFT_CLUSTER_ID: tindertinder
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093"
      KAFKA_HEAP_OPTS: "-Xms200m -Xmx300m"
      KAFKA_CFG_NODE_ID: 3
    networks:
      - tinder

  ui:
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8585:8080"
    environment:
      JAVA_TOOL_OPTIONS: "-Xms128m -Xmx256m -XX:+UseSerialGC -Xss512k -XX:MaxRAM=350m"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka-1:9092"
      KAFKA_CLUSTERS_0_NAME: kafka-1
      KAFKA_CLUSTERS_1_BOOTSTRAP_SERVERS: "kafka-2:9092"
      KAFKA_CLUSTERS_1_NAME: kafka-2
      KAFKA_CLUSTERS_2_BOOTSTRAP_SERVERS: "kafka-3:9092"
      KAFKA_CLUSTERS_2_NAME: kafka-3
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - tinder

  database:
    image: postgres:17
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d tinder" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      - ui
    restart: unless-stopped
    networks:
      - tinder


  liquibase:
    image: liquibase/liquibase:4.29.2
    container_name: liquibase
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./db/changelog/:/liquibase/db/changelog/
    command: [
      /liquibase/liquibase,
      --username=postgres,
      --password=root,
      --driver=org.postgresql.Driver,
      --url=jdbc:postgresql://database:5432/tinder,
      --changeLogFile=/db/changelog/changelog-master.xml,
      update,
    ]
    environment:
      - LIQUIBASE_SECURE_PARSING=false
    networks:
      - tinder


  config-service:
    image: config-service:latest
    container_name: config-service
    build:
      context: ./config-service
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - database
      - liquibase
    environment:
      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
    restart: on-failure
    networks:
      - tinder

  eureka-service:
    image: eureka-service:latest
    container_name: eureka-service
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - config-service
    environment:
      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
    restart: on-failure
    networks:
      - tinder

  gateway-service:
    image: gateway-service:latest
    container_name: gateway-service
    environment:
      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka-service
    restart: on-failure
    networks:
      - tinder

  location-service:
    image: location-service:latest
    container_name: location-service
    environment:
      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
    build:
      context: ./location-service
      dockerfile: Dockerfile
    ports:
      - "8180:8180"
    depends_on:
      - gateway-service
    restart: on-failure
    networks:
      - tinder

  fabric-texture-service:
    image: fabric-texture-service:latest
    container_name: fabric-texture-service
    environment:
      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
    build:
      context: ./fabric-texture-service
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      - gateway-service
    restart: on-failure
    networks:
      - tinder

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    environment:
      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8182:8182"
    depends_on:
      - gateway-service
    restart: on-failure
    networks:
      - tinder

  spacesuit-service:
    image: spacesuit-service:latest
    container_name: spacesuit-service
    environment:
      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
    build:
      context: ./spacesuit-service
      dockerfile: Dockerfile
    ports:
      - "8183:8183"
    depends_on:
      - gateway-service
    restart: on-failure
    networks:
      - tinder

#  user-data-service:
#    image: user-data-service:latest
#    container_name: user-data-service
#    environment:
#      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
#    build:
#      context: ./user-data-service
#      dockerfile: Dockerfile
#    ports:
#      - "8184:8184"
#    depends_on:
#      - gateway-service
#    restart: on-failure
#    networks:
#      - tinder

  events-analytics-service:
    image: events-analytics-service:latest
    container_name: events-analytics-service
    environment:
      JAVA_TOOL_OPTIONS: "-Xms64m -Xmx168m -XX:+UseSerialGC -Xss256k -XX:MaxRAM=350m"
    build:
      context: ./events-analytics-service
      dockerfile: Dockerfile
    ports:
      - "8185:8185"
    depends_on:
      - ui
    restart: on-failure
    networks:
      - tinder

volumes:
  postgres:
  minio_storage:

networks:
  tinder: