server:
  port: 8183
  forward-headers-strategy: framework
spring:
  kafka:
    bootstrap-servers:
      - PLAINTEXT://kafka:9092
    admin:
      auto-create: true
    topics:
      - name: spacesuit-request-changed
        partitions: 3
        replicas: 1
      - name: spacesuit-request-created
        partitions: 3
        replicas: 1
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      spacesuit-request-changed-topic: "spacesuit-request-changed"
      spacesuit-request-created-topic: "spacesuit-request-created"

  datasource:
    url: jdbc:postgresql://database:5432/tinder
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  liquibase:
    enabled: false
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/
management:
  endpoints:
    web:
      exposure:
        include: '*'

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      waitDurationInOpenState: 50s
      failureRateThreshold: 50

resilience4j.timelimiter:
  configs:
    default:
      timeoutDuration: 5s
      cancelRunningFuture: true

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 10s